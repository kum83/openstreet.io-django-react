# Generated by Django 3.1.4 on 2021-05-12 16:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FinalCSV',
            fields=[
                ('key', models.FloatField(null=True)),
                ('buy_value', jsonfield.fields.JSONField(null=True)),
                ('correl', models.FloatField(null=True)),
                ('debt_to_equity', models.FloatField(null=True)),
                ('dividend_yield', models.FloatField(null=True)),
                ('earnings_yield', models.FloatField(null=True)),
                ('fair_value_ddm', models.FloatField(null=True)),
                ('fair_value_fcf', models.FloatField(null=True)),
                ('free_cash_flow', models.FloatField(null=True)),
                ('industry', models.CharField(max_length=100)),
                ('industry_rank', models.FloatField(null=True)),
                ('market_share_growth', models.FloatField(null=True)),
                ('max_drawdown', models.FloatField(null=True)),
                ('name', models.CharField(max_length=100)),
                ('net_holding', models.FloatField(null=True)),
                ('net_inst_by_date', jsonfield.fields.JSONField(null=True)),
                ('net_inst_value', jsonfield.fields.JSONField(null=True)),
                ('net_value_executed', models.FloatField(null=True)),
                ('payout_ratio', models.FloatField(null=True)),
                ('price', models.FloatField(null=True)),
                ('profit_margin', models.FloatField(null=True)),
                ('profitability_rank', models.CharField(max_length=100)),
                ('quality_rank', models.CharField(max_length=100)),
                ('return_on_invested_capital', models.FloatField()),
                ('rev_growth', models.FloatField(null=True)),
                ('rev_uncertainty', models.FloatField(null=True)),
                ('roe_growth', models.FloatField(null=True)),
                ('roe_uncertainty', models.FloatField(null=True)),
                ('sector', models.CharField(max_length=100)),
                ('sell_value', jsonfield.fields.JSONField(null=True)),
                ('top10_buys', jsonfield.fields.JSONField(null=True)),
                ('top10_inst', jsonfield.fields.JSONField(null=True)),
                ('top10_sells', jsonfield.fields.JSONField(null=True)),
                ('value_rank', models.CharField(max_length=100)),
                ('vol', models.FloatField(null=True)),
                ('equity_to_debt', models.FloatField(null=True)),
                ('inv_rev_uncertainty', models.FloatField(null=True)),
                ('inv_roe_uncertainty', models.FloatField(null=True)),
                ('inv_correl', models.FloatField(null=True)),
                ('inv_max_drawdown', models.FloatField(null=True)),
                ('inv_vol', models.FloatField(null=True)),
                ('fcf_value', models.FloatField(null=True)),
                ('ddm_value', models.FloatField(null=True)),
                ('fair_value_score', models.FloatField(null=True)),
                ('risk_score', models.FloatField(null=True)),
                ('net_holding_pct', models.FloatField(null=True)),
                ('net_value_executed_pct', models.FloatField(null=True)),
                ('company_health', models.FloatField(null=True)),
                ('company_yield', models.FloatField(null=True)),
                ('company_quality', models.FloatField(null=True)),
                ('ticker', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('ticker_name', models.CharField(max_length=100)),
                ('wealth_graph', jsonfield.fields.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinalCSVTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table', jsonfield.fields.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPortfolio',
            fields=[
                ('custom_portfolio', models.BooleanField(default=False)),
                ('portfolio_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('date_created', models.DateField()),
                ('execute_code', models.IntegerField(default=0)),
                ('min_health', models.FloatField(null=True)),
                ('min_yield', models.FloatField(null=True)),
                ('min_quality', models.FloatField(null=True)),
                ('min_fair_value', models.FloatField(null=True)),
                ('industry', models.CharField(default='', max_length=100)),
                ('max_industry_rank', models.FloatField(null=True)),
                ('min_risk', models.FloatField(null=True)),
                ('min_insider_rating', models.FloatField(null=True)),
                ('min_inst_rating', models.FloatField(null=True)),
                ('allocation', models.FloatField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPortfolioStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_constituents', jsonfield.fields.JSONField(null=True)),
                ('pf_stats', jsonfield.fields.JSONField(null=True)),
                ('old_portfolio_constituents', jsonfield.fields.JSONField(null=True)),
                ('portfolio_wealth_graph', jsonfield.fields.JSONField(null=True)),
                ('portfolio_health', models.FloatField(null=True)),
                ('portfolio_yield', models.FloatField(null=True)),
                ('portfolio_quality', models.FloatField(null=True)),
                ('portfolio_insider_rating', models.FloatField(null=True)),
                ('portfolio_inst_rating', models.FloatField(null=True)),
                ('portfolio_industry_rank', models.FloatField(null=True)),
                ('portfolio_fair_value', models.FloatField(null=True)),
                ('portfolio_risk', models.FloatField(null=True)),
                ('portfolio_change', models.FloatField(null=True)),
                ('portfolio_allocation', models.FloatField(null=True)),
                ('portfolio_historical_return', models.FloatField(null=True)),
                ('portfolio_historical_risk', models.FloatField(null=True)),
                ('portfolio_historical_sharpe', models.FloatField(null=True)),
                ('execute_portfolio', jsonfield.fields.JSONField(null=True)),
                ('name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='name', to='articles.userportfolio')),
            ],
        ),
        migrations.CreateModel(
            name='TDState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('td_state', jsonfield.fields.JSONField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Strategies',
            fields=[
                ('strategy_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('holding_period', models.FloatField(null=True)),
                ('ticker', models.CharField(max_length=100)),
                ('patterns', jsonfield.fields.JSONField(null=True)),
                ('allocation', models.FloatField()),
                ('in_position', models.BooleanField(default=False)),
                ('is_live', models.BooleanField(default=False)),
                ('cash', models.FloatField(null=True)),
                ('holdings', models.FloatField(null=True)),
                ('current_holding_period', models.FloatField(default=0)),
                ('shares_bought', models.FloatField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='s_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crypto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation', models.FloatField(null=True)),
                ('strategy_name', models.CharField(max_length=100)),
                ('in_position', models.BooleanField(default=False)),
                ('cash', models.FloatField(null=True)),
                ('holdings', models.FloatField(null=True)),
                ('shares_bought', models.FloatField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_c', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BinanceAPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(max_length=100)),
                ('api_secret', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_b', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
