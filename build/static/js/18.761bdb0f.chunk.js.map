{"version":3,"sources":["views/ui-elements/data-list/Crypto.js","components/@vuexy/checkbox/CheckboxesVuexy.js","views/ui-elements/data-list/Percent.js","views/charts/apex/ApexAreaCharts.js","views/charts/apex/lightweight.js","components/@vuexy/statisticsCard/StatisticsCard.js","assets/img/elements/risk_averse.png","assets/img/elements/shutterstock_1866835708-removebg-preview.png","assets/img/elements/value_seeker.png","assets/img/elements/all_star.png"],"names":["Crypto","state","allocation","mm_bot","ss_bot","pt_bot","rd_bot","isStatsLoading","modal","strategyBacktest","e","name","items","setState","axios","get","props","token","then","res","pf_stats","data","stats","stats_set","areaSeries","wealth_graph","catch","err","response","console","log","error_state","strategyLive","post","strategy_name","update_set","strategyDelete","portfolioConnect","preventDefault","api_key","api_secret","message","prevState","login_state","toggleModal","isExecuteLoading","fetchArticles","strategies","i","length","strategy","handleChange","target","value","this","isOpen","toggle","className","onSubmit","for","onChange","type","id","color","outline","onClick","gutter","lg","sm","hideChart","iconBg","icon","size","stat","statTitle","legend","darkTheme","autoWidth","height","resetFilter","style","margin","md","required","placeholder","Ripple","to","React","connect","auth","CheckBoxesVuexy","defaultChecked","checked","disabled","label","Component","GoalOverview","options","chart","sparkline","enabled","dropShadow","blur","left","top","opacity","colors","success","plotOptions","radialBar","startAngle","endAngle","hollow","track","background","strokeColor","strokeWidth","dataLabels","show","offsetY","fontSize","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","lineCap","series","percent","title","ApexAreaCharts","modifydata","flag","second","date","wealth","x","push","Math","round","portfolio_wealth","performance","xaxis","categories","tickAmount","curve","themeColors","grid","row","tooltip","format","addSeriesFunctions","candlestick","line","area","bar","histogram","layout","backgroundColor","lineColor","textColor","vertLines","horzLines","lightTheme","ChartWrapper","resizeHandler","width","chartDiv","current","parentNode","clientWidth","autoHeight","clientHeight","resize","removeSeries","forEach","serie","addSeries","func","handleLinearInterpolation","linearInterpolation","setData","markers","setMarkers","priceLines","createPriceLine","addLegend","handleSeries","candlestickSeries","lineSeries","barSeries","histogramSeries","unsubscribeEvents","prevProps","unsubscribeClick","unsubscribeCrosshairMove","onCrosshairMove","timeScale","unsubscribeVisibleTimeRangeChange","onTimeRangeMove","handleEvents","subscribeClick","subscribeCrosshairMove","subscribeVisibleTimeRangeChange","handleLegends","handleTimeRange","from","setVisibleRange","candleTime","first","time","last","newData","Array","floor","index","prevTime","prevValue","interTime","interValue","filter","handleUpdateChart","window","removeEventListener","mergeDeep","applyOptions","legendDiv","innerHTML","legends","handleMainLegend","addEventListener","param","div","price","seriesPrices","undefined","open","close","high","low","document","createElement","innerText","priceElem","appendChild","createRef","createChart","equal","ref","position","zIndex","padding","isObject","item","isArray","source","output","Object","assign","keys","key","StatisticsCards","iconRight","module","exports"],"mappings":"icAiDMA,G,kRAEJC,MAAQ,CACNC,WAAW,EACXC,QAAO,EACPC,QAAO,EACPC,QAAO,EACPC,QAAQ,EACRC,gBAAgB,EAChBC,OAAM,G,EAIRC,iBAAmB,SAACC,EAAGC,GACrB,IAAIC,EAAQ,EAAKX,MACjBW,EAAK,eAAqBD,EAC1B,EAAKE,SAAS,CAACD,UACY,IAAxB,EAAKX,MAAMC,YACdY,IAAMC,IAAN,kDAAqD,EAAKC,MAAMC,MAAhE,0BAAuFN,EAAvF,uCAA0H,EAAKV,MAAMC,aAChIgB,MAAK,SAAAC,GACH,EAAKN,SAAS,CACbO,SAAUD,EAAIE,KAAKC,MAAM,GACzBC,WAAW,EACXhB,eAAe,GACfiB,WAAW,CAAC,CAACH,KAAKF,EAAIE,KAAKI,oBAG5BC,OAAM,SAAAC,GACHA,EAAIC,WACNC,QAAQC,IAAIH,EAAIC,UAChB,EAAKf,SAAS,CAAEkB,aAAa,EAAMxB,eAAe,U,EAQ5DyB,aAAe,SAACtB,EAAGC,GACU,IAAxB,EAAKV,MAAMC,YACdY,IAAMmB,KAAN,kDAAsD,EAAKjB,MAAMC,OAAS,CACxEiB,cAAevB,EACfT,WAAY,EAAKD,MAAMC,aACtBgB,MAAK,SAAAC,GACNU,QAAQC,IAAIX,GACZ,EAAKN,SAAS,CAAEsB,YAAY,OAE7BT,OAAM,SAAAC,GACHA,EAAIC,WACNC,QAAQC,IAAIH,EAAIC,UAChB,EAAKf,SAAS,CAAEkB,aAAa,S,EAKjCK,eAAiB,SAAC1B,EAAGC,GACnBG,IAAMC,IAAN,kDAAqD,EAAKC,MAAMC,MAAhE,0BAAuFN,EAAvF,mBAA6GO,MAAK,SAAAC,GAChH,EAAKN,SAAS,CACZsB,YAAY,OAEbT,OAAM,SAAAC,GAELE,QAAQC,IAAIH,EAAIC,UAChB,EAAKf,SAAS,CAAEkB,aAAa,Q,EAIjCM,iBAAmB,SAAC3B,GAClBA,EAAE4B,iBAEFxB,IAAMmB,KAAN,kDAAsD,EAAKjB,MAAMC,MAAjE,mBAAyF,CACrFsB,QAAQ,EAAKtC,MAAMsC,QACnBC,WAAY,EAAKvC,MAAMuC,aACpBtB,MAAK,SAAAC,GACNU,QAAQC,IAAIX,EAAIE,KAAKoB,SACrB,EAAK5B,UAAS,SAAA6B,GAAS,MAAG,CACxBC,YAAaxB,EAAIE,KAAKoB,QACtBjC,OAAQkC,EAAUlC,aAEnBkB,OAAM,SAAAC,GAELE,QAAQC,IAAIH,EAAIC,UAChB,EAAKf,UAAS,SAAA6B,GAAS,MAAG,CAAEX,aAAa,EAAMvB,OAAQkC,EAAUlC,c,EAMzEoC,YAAc,WACZ,EAAK/B,UAAS,SAAA6B,GAAS,MAAK,CAC1BlC,OAAQkC,EAAUlC,MAClBqC,kBAAkB,O,EAI1BC,cAAgB,SAAC7B,GACbH,IAAMC,IAAN,kDAAqDE,IAASC,MAAK,SAAAC,GACjE,EAAKN,SAAS,CACZkC,WAAY5B,EAAIE,OAElB,EAAKR,SAAS,CACZV,QAAO,EACPC,QAAO,EACPC,QAAO,EACPC,QAAQ,IAEV,IAAK,IAAI0C,EAAI,EAAGA,EAAI,EAAK/C,MAAM8C,WAAWE,OAAQD,IAAK,CACrD,IAAIE,EAAW,EAAKjD,MAAM8C,WAAWC,GACrC,EAAKnC,SAAL,eACGqC,EAAShB,eAAgB,IAG9BL,QAAQC,IAAI,EAAK7B,UAChByB,OAAM,SAAAC,GAELE,QAAQC,IAAIH,EAAIC,UAChB,EAAKf,SAAS,CAAEkB,aAAa,OAG/BjB,IAAMmB,KAAN,kDAAsD,EAAKjB,MAAMC,MAAjE,oBACCC,MAAK,SAAAC,GACJ,EAAKN,SAAS,CACZ8B,YAAaxB,EAAIE,KAAKoB,aAGzBf,OAAM,SAAAC,GAELE,QAAQC,IAAIH,EAAIC,UAChB,EAAKf,SAAS,CAAE8B,aAAa,Q,EAkBrCQ,aAAe,SAAAzC,GACb,EAAKG,SAAL,eAAiBH,EAAE0C,OAAOzC,KAAOD,EAAE0C,OAAOC,S,mEAdrCC,KAAKrD,MAAMkC,aACdmB,KAAKR,cAAcQ,KAAKtC,MAAMC,OAE9BqC,KAAKzC,SAAS,CACZsB,YAAY,O,0CAMdmB,KAAKR,cAAcQ,KAAKtC,MAAMC,S,+BAQzB,IAAD,OACN,OAAKqC,KAAKtC,MAAMC,MAKd,2BACE,gBAAC,IAAD,CACAsC,OAAQD,KAAKrD,MAAMO,MACnBgD,OAAQF,KAAKV,YACba,UAAU,yBAEV,gBAAC,IAAD,CAAaD,OAAQF,KAAKV,aAA1B,YAIE,gBAAC,IAAD,CAAMc,SAAUJ,KAAKjB,kBACnB,gBAAC,IAAD,KAGA,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOsB,IAAI,WAAX,WACA,gBAAC,IAAD,CACEC,SAAUN,KAAKH,aACfU,KAAK,OACLlD,KAAK,UACLmD,GAAG,aAGP,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOH,IAAI,cAAX,cACA,gBAAC,IAAD,CACEC,SAAUN,KAAKH,aACfU,KAAK,OACLlD,KAAK,aACLmD,GAAG,iBAMP,gBAAC,IAAD,KAEA,gBAAC,IAAD,KAEA,gBAAC,IAAD,CAAQC,MAAM,UAAUF,KAAK,UAA7B,UAIC,KAED,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAQG,SAAO,EAACD,MAAM,UAAUE,QAASX,KAAKV,aAA9C,cASFU,KAAKrD,MAAM0C,YACX,4BAEE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQoB,MAAM,UAAUE,QAASX,KAAKV,aAAtC,4BAWhBU,KAAKrD,MAAMsB,UAET,uBAAKkC,UAAU,qBACb,gBAAC,IAAD,CAAKS,OAAQ,IACb,gBAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,MACf,gBAAC,IAAD,CAAKF,OAAQ,IAEb,gBAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,UACPC,KAAM,gBAAC,IAAD,CAASd,UAAU,UAAUe,KAAM,KACzCC,KAAMnB,KAAKrD,MAAMmB,SAAS,iBAC1BsD,UAAU,uBAGd,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACb,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,SACPC,KAAM,gBAAC,IAAD,CAASd,UAAU,SAASe,KAAM,KACxCC,KAAMnB,KAAKrD,MAAMmB,SAAS,qBAC1BsD,UAAU,qBAIhB,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACb,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,UACPC,KAAM,gBAAC,IAAD,CAAUd,UAAU,UAAUe,KAAM,KAC1CC,KAAMnB,KAAKrD,MAAMmB,SAAS,gBAC1BsD,UAAU,kBAGd,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACb,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,SACPC,KAAM,gBAAC,IAAD,CAASd,UAAU,SAASe,KAAM,KACxCC,KAAMnB,KAAKrD,MAAMmB,SAAS,gBAC1BsD,UAAU,kBAIZ,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACf,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,UACPC,KAAM,gBAAC,IAAD,CAAUd,UAAU,UAAUe,KAAM,KAC1CC,KAAMnB,KAAKrD,MAAMmB,SAAS,iBAC1BsD,UAAU,mBAGZ,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACf,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,UACPC,KAAM,gBAAC,IAAD,CAAUd,UAAU,UAAUe,KAAM,KAC1CC,KAAMnB,KAAKrD,MAAMmB,SAAS,gBAC1BsD,UAAU,kBAMd,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACb,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,UACPC,KAAM,gBAAC,IAAD,CAAUd,UAAU,UAAUe,KAAM,KAC1CC,KAAMnB,KAAKrD,MAAMmB,SAAX,MACNsD,UAAU,WAId,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACb,gBAAC,IAAD,CACEC,WAAS,EACTC,OAAO,UACPC,KAAM,gBAAC,IAAD,CAAOd,UAAU,UAAUe,KAAM,KACvCC,KAAMnB,KAAKrD,MAAMmB,SAAX,KACNsD,UAAU,YASd,gBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,MACb,gBAAC,IAAD,KACF,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAOO,OAAO,wBAAwBC,WAAW,EAAMpD,WAAY8B,KAAKrD,MAAMuB,WAAYqD,WAAS,EAACC,OAAQ,WAQ5G,4BAEA,gBAAC,IAAD,KAEU,gBAAC,IAAD,aAAKV,GAAG,IAAID,GAAG,KAAf,KAAsB,MAC1B,gBAAC,IAAD,KAGO,gBAAC,IAAD,KACF,yDAEA,wNACA,uBAAKV,UAAU,kDAEW,IAAzBH,KAAKrD,MAAM0C,YACX,2BAGGW,KAAKrD,MAAMG,OACX,2BAEA,gBAAC,IAAD,CAAS6D,QAASX,KAAKyB,YAAahB,MAAM,WAA1C,QAGF,gBAAC,IAAD,CAAQiB,MAAO,CAChBC,OAAQ,SACNhB,QAAS,SAAAvD,GAAC,OAAI,EAAK0B,eAAe1B,EAAG,WAAWqD,MAAM,UAFvD,SAOE,2BAEG,gBAAC,IAAD,CAAKmB,GAAG,MACpB,gBAAC,IAAD,CAEEC,UAAQ,EACRtB,KAAK,OACLlD,KAAK,aACLmD,GAAG,aACHsB,YAAY,aACZxB,SAAUN,KAAKH,gBAGb,0BAAI,gBAAC,IAAD,KACD,gBAAC,IAAOkC,OAAR,CAAepB,QAAS,SAAAvD,GAAC,OAAI,EAAKsB,aAAatB,EAAG,WAAWqD,MAAM,WAAnE,WAGA,gBAAC,IAAOsB,OAAR,CAAerB,SAAO,EAACgB,MAAO,CAC/BC,OAAQ,SACPhB,QAAS,SAAAvD,GAAC,OAAI,EAAKD,iBAAiBC,EAAG,WAAWqD,MAAM,WAFxD,YAMF,gBAAC,IAAD,MAC6B,WAA5BT,KAAKrD,MAAMM,eAEX,gBAAC,IAAD,CAASwD,MAAM,YAEf,+BAOA,gCAMF,gBAAC,IAAD,aAAKK,GAAG,IAAID,GAAG,KAAf,KAAsB,MAC1B,gBAAC,IAAD,KAGO,gBAAC,IAAD,KACF,sDAEA,uLACA,uBAAKV,UAAU,iDAEb,gBAAC,IAAD,KACA,gBAAC,IAAO4B,OAAR,CAAerB,SAAO,EAACD,MAAM,WAA7B,qBAQH,gBAAC,IAAD,aAAKK,GAAG,IAAID,GAAG,KAAf,KAAsB,MAC1B,gBAAC,IAAD,KAGO,gBAAC,IAAD,KACF,8CAEA,8LACA,uBAAKV,UAAU,iDAEb,gBAAC,IAAD,KACA,gBAAC,IAAO4B,OAAR,CAAerB,SAAO,EAACD,MAAM,WAA7B,qBAQH,gBAAC,IAAD,aAAKK,GAAG,IAAID,GAAG,KAAf,KAAsB,MAC1B,gBAAC,IAAD,KAGO,gBAAC,IAAD,KACF,oDAEA,+JACA,uBAAKV,UAAU,iDAEb,gBAAC,IAAD,KACA,gBAAC,IAAO4B,OAAR,CAAerB,SAAO,EAACD,MAAM,WAA7B,uBA1SF,gBAAC,IAAD,CAAUuB,GAAG,e,GAzJLC,cAydFC,uBANK,SAAAvF,GACtB,MAAM,CACJgB,MAAOhB,EAAMwF,KAAKxE,SAIHuE,CAAyBxF,I,qFCzgBtC0F,E,uKAEF,OACE,yBACEjC,UAAS,0BACPH,KAAKtC,MAAMyC,UAAYH,KAAKtC,MAAMyC,UAAY,GADvC,wBAEOH,KAAKtC,MAAM+C,QAE3B,2BACEF,KAAK,WACL8B,eAAgBrC,KAAKtC,MAAM2E,eAC3BC,QAAStC,KAAKtC,MAAM4E,QACpBvC,MAAOC,KAAKtC,MAAMqC,MAClBwC,SAAUvC,KAAKtC,MAAM6E,SACrBV,SAAU7B,KAAKtC,MAAMmE,SACrBlB,QAASX,KAAKtC,MAAMiD,QAAUX,KAAKtC,MAAMiD,QAAU,KACnDL,SAAUN,KAAKtC,MAAM4C,SAAWN,KAAKtC,MAAM4C,SAAW,OAExD,0BACEH,UAAS,kCACPH,KAAKtC,MAAMwD,KAAOlB,KAAKtC,MAAMwD,KAAO,OAGtC,0BAAMf,UAAU,sBAAsBH,KAAKtC,MAAMuD,OAEnD,8BAAOjB,KAAKtC,MAAM8E,Y,GAzBIP,IAAMQ,WA+BrBL,O,+IC5BTM,E,4MACJ/F,MAAQ,CACNgG,QAAS,CACPC,MAAO,CACLC,UAAW,CACTC,SAAS,GAEXC,WAAY,CACVD,SAAS,EACTE,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,QAAS,KAGbC,OAAQ,CAAC,EAAK1F,MAAM2F,SACpBC,YAAa,CACXC,UAAW,CACTrC,KAAM,IACNsC,YAAa,IACbC,SAAU,IACVC,OAAQ,CACNxC,KAAM,OAERyC,MAAO,CACLC,WAAY,EAAKlG,MAAMmG,YACvBC,YAAa,OAEfC,WAAY,CACV1G,KAAM,CACJ2G,MAAM,GAERjE,MAAO,CACLkE,QAAS,GACTxD,MAAO,EAAK/C,MAAMmG,YAClBK,SAAU,WAKlBC,KAAM,CACJ5D,KAAM,WACN6D,SAAU,CACRC,MAAO,OACP9D,KAAM,aACN+D,eAAgB,GAChBC,iBAAkB,CAAC,WACnBC,eAAe,EACfC,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,OAGfC,OAAQ,CACNC,QAAS,UAGbC,OAAQ,CAAC,EAAKpH,MAAMqH,U,uDAIpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAY/E,KAAKtC,MAAMsH,QACZ,6BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErC,QAAS3C,KAAKrD,MAAMgG,QACpBmC,OAAQ,CAAC9E,KAAKtC,MAAMqH,SACpBxE,KAAK,YACLiB,OAAQ,Y,GAvEOS,IAAMQ,WA8ElBC,O,+IC9ETuC,E,4MACJC,WAAa,SAACnH,EAAMoH,EAAMC,GACxB,IAAIC,EAAO,GAAIC,EAAS,GACxB,IAAK,IAAIC,KAAKxH,EACZsH,EAAKG,KAAKzH,EAAKwH,GAAGF,MACJ,GAAVD,EAAaE,EAAOE,KAAKC,KAAKC,MAAiC,IAA3B3H,EAAKwH,GAAGI,kBAA0B,KACrEL,EAAOE,KAAKC,KAAKC,MAA4B,IAAtB3H,EAAKwH,GAAGK,aAAqB,KAE3D,OAAKT,EACOG,EADMD,G,uDAKlB,IAAM1C,EAAU,CACdC,MAAO,CACLpC,GAAI,aAENqF,MAAO,CACLtF,KAAM,OACNuF,WAAY9F,KAAKkF,WAAWlF,KAAKtC,MAAMK,KAAM,EAAGiC,KAAKtC,MAAM0H,QAC3DW,WAAY,GAEdnB,OAAQ,CACNoB,MAAO,UAETjC,WAAY,CACVjB,SAAS,GAEXM,OAAQpD,KAAKtC,MAAMuI,YACnBC,KAAM,CACJC,IAAK,CACH/C,OAAQ,CAAC,UAAW,eACpBD,QAAS,KAGb9B,OAAQ,CACN4C,SAAU,IAEZmC,QAAS,CACPb,EAAG,CACDc,OAAQ,cAIRvB,EAAS,CACb,CACEzH,KAAM,UACNU,KAAMiC,KAAKkF,WAAWlF,KAAKtC,MAAMK,KAAM,EAAGiC,KAAKtC,MAAM0H,UAIzD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAYpF,KAAKtC,MAAMsH,QAEzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErC,QAASA,EACTmC,OAAQA,EACRvE,KAAK,OACLiB,OAAQ,Y,GA7DSS,IAAMQ,WAoEpBwC,O,wICpETqB,EAAqB,CACvBC,YAAa,uBACbC,KAAM,gBACNC,KAAM,gBACNC,IAAK,eACLC,UAAW,sBAGTvD,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,WAGE9B,EAAY,CACdsF,OAAQ,CACJC,gBAAiB,UACjBC,UAAW,UACXC,UAAW,WAEfb,KAAM,CACFc,UAAW,CACPvG,MAAO,WAEXwG,UAAW,CACPxG,MAAO,aAKbyG,EAAa,CACfN,OAAQ,CACJC,gBAAiB,UACjBC,UAAW,UACXC,UAAW,WAEfb,KAAM,CACFc,UAAW,CACPvG,MAAO,WAEXwG,UAAW,CACPxG,MAAO,aAKb0G,E,kDACF,WAAYzJ,GAAQ,IAAD,8BACf,cAAMA,IA+DV0J,cAAgB,WACZ,IAAIC,EACA,EAAK3J,MAAM6D,WACX,EAAK+F,SAASC,SACd,EAAKD,SAASC,QAAQC,WAAWC,YACjCjG,EACA,EAAK9D,MAAMgK,YAAc,EAAKJ,SAASC,QACjC,EAAKD,SAASC,QAAQC,WAAWG,aACjC,EAAKjK,MAAM8D,QAAU,IAC/B,EAAKoB,MAAMgF,OAAOP,EAAO7F,IAzEV,EA4EnBqG,aAAe,WACX,EAAK/C,OAAOgD,SAAQ,SAACC,GAAD,OAAW,EAAKnF,MAAMiF,aAAaE,MACvD,EAAKjD,OAAS,IA9EC,EAiFnBkD,UAAY,SAACD,EAAOxH,GAChB,IAAM0H,EAAO3B,EAAmB/F,GAC5BE,EACCsH,EAAMpF,SAAWoF,EAAMpF,QAAQlC,OAChC2C,EAAO,EAAK0B,OAAOnF,OAASyD,EAAOzD,QACjCmF,EAAS,EAAKlC,MAAMqF,GAAX,aACXxH,SACGsH,EAAMpF,UAET5E,EAAO,EAAKmK,0BACZH,EAAMhK,KACNgK,EAAMI,qBAOV,OALArD,EAAOsD,QAAQrK,GACXgK,EAAMM,SAASvD,EAAOwD,WAAWP,EAAMM,SACvCN,EAAMQ,YACNR,EAAMQ,WAAWT,SAAQ,SAACtB,GAAD,OAAU1B,EAAO0D,gBAAgBhC,MAC1DuB,EAAM1G,QAAQ,EAAKoH,UAAU3D,EAAQrE,EAAOsH,EAAM1G,QAC/CyD,GAnGQ,EAsGnB4D,aAAe,WACX,IAAI5D,EAAS,EAAKA,OACdpH,EAAQ,EAAKA,MACjBA,EAAMiL,mBACFjL,EAAMiL,kBAAkBb,SAAQ,SAACC,GAC7BjD,EAAOU,KAAK,EAAKwC,UAAUD,EAAO,mBAG1CrK,EAAMkL,YACFlL,EAAMkL,WAAWd,SAAQ,SAACC,GACtBjD,EAAOU,KAAK,EAAKwC,UAAUD,EAAO,YAG1CrK,EAAMQ,YACFR,EAAMQ,WAAW4J,SAAQ,SAACC,GACtBjD,EAAOU,KAAK,EAAKwC,UAAUD,EAAO,YAG1CrK,EAAMmL,WACFnL,EAAMmL,UAAUf,SAAQ,SAACC,GACrBjD,EAAOU,KAAK,EAAKwC,UAAUD,EAAO,WAG1CrK,EAAMoL,iBACFpL,EAAMoL,gBAAgBhB,SAAQ,SAACC,GAC3BjD,EAAOU,KAAK,EAAKwC,UAAUD,EAAO,kBA/H3B,EAmInBgB,kBAAoB,SAACC,GACjB,IAAIpG,EAAQ,EAAKA,MACjBA,EAAMqG,iBAAiBD,EAAUrI,SACjCiC,EAAMsG,yBAAyBF,EAAUG,iBACzCvG,EAAMwG,YAAYC,kCAAkCL,EAAUM,kBAvI/C,EA0InBC,aAAe,WACX,IAAI3G,EAAQ,EAAKA,MACblF,EAAQ,EAAKA,MACjBA,EAAMiD,SAAWiC,EAAM4G,eAAe9L,EAAMiD,SAC5CjD,EAAMyL,iBACFvG,EAAM6G,uBAAuB/L,EAAMyL,iBACvCzL,EAAM4L,iBACF1G,EAAMwG,YAAYM,gCAAgChM,EAAM4L,iBAG5D1G,EAAM6G,uBAAuB,EAAKE,gBApJnB,EAuJnBC,gBAAkB,WAAO,IAAD,EACD,EAAKlM,MAAlBmM,EADc,EACdA,KAAM7H,EADQ,EACRA,GACZ6H,GAAQ7H,GAAM,EAAKY,MAAMwG,YAAYU,gBAAgB,CAAED,OAAM7H,QAzJ9C,EA4JnBkG,0BAA4B,SAACnK,EAAMgM,GAC/B,IAAKA,GAAchM,EAAK4B,OAAS,IAAM5B,EAAK,GAAGgC,MAAO,OAAOhC,EAC7D,IAAIiM,EAAQjM,EAAK,GAAGkM,KAChBC,EAAOnM,EAAKA,EAAK4B,OAAS,GAAGsK,KAC7BE,EAAU,IAAIC,MAAM3E,KAAK4E,OAAOH,EAAOF,GAASD,IACpDI,EAAQ,GAAKpM,EAAK,GAElB,IADA,IAAIuM,EAAQ,EACH5K,EAAI,EAAGA,EAAI3B,EAAK4B,OAAQD,IAAK,CAClCyK,EAAQG,KAAWvM,EAAK2B,GAIxB,IAHA,IAAI6K,EAAWxM,EAAK2B,EAAI,GAAGuK,KACvBO,EAAYzM,EAAK2B,EAAI,GAAGK,MAHM,EAIZhC,EAAK2B,GAArBuK,EAJ4B,EAI5BA,KAAMlK,EAJsB,EAItBA,MAEJ0K,EAAYF,EAChBE,EAAYR,EAAOF,EACnBU,GAAaV,EACf,CAEE,IAAIW,EACAF,GAEMzK,EAAQyK,IAAcP,EAAOM,IADlCE,EAAYF,GAEjBJ,EAAQG,KAAW,CAAEL,KAAMQ,EAAW1K,MAAO2K,IAIrD,OAAOP,EAAQQ,QAAO,SAACpF,GAAD,OAAOA,MAtLd,EAyLnBqF,kBAAoB,WAChBC,OAAOC,oBAAoB,SAAU,EAAK1D,eADpB,qBAEhBxE,EAFgB,EAEhBA,MAAO0E,EAFS,EAETA,SACT5J,EAAQ,EAAKA,MACbiF,EAAU,EAAKjF,MAAM4D,UAAYA,EAAY4F,EACjDvE,EAAUoI,EAAUpI,EAAD,aACf0E,MAAO3J,EAAM6D,UACP+F,EAASC,QAAQC,WAAWC,YAC5B/J,EAAM2J,MACZ7F,OAAQ9D,EAAMgK,WACRJ,EAASC,QAAQC,WAAWG,aAC5BjK,EAAM8D,QAAU,KACnB9D,EAAMiF,UAEbC,EAAMoI,aAAarI,GACf,EAAKsI,UAAU1D,UAAS,EAAK0D,UAAU1D,QAAQ2D,UAAY,IAC/D,EAAKC,QAAU,GACX,EAAKzN,MAAM2D,QAAQ,EAAK+J,mBAE5B,EAAK1C,eACL,EAAKa,eACL,EAAKK,mBAEDlM,EAAM6D,WAAa7D,EAAMgK,aAEzBmD,OAAOQ,iBAAiB,SAAU,EAAKjE,gBAlN5B,EAqNnBqB,UAAY,SAAC3D,EAAQrE,EAAOuE,GACxB,EAAKmG,QAAQ3F,KAAK,CAAEV,SAAQrE,QAAOuE,WAtNpB,EAyNnB2E,cAAgB,SAAC2B,GACb,IAAIC,EAAM,EAAKN,UAAU1D,QACrB+D,EAAMrB,MAAQsB,GAAO,EAAKJ,QAAQxL,SAClC4L,EAAIL,UAAY,GAChB,EAAKC,QAAQrD,SAAQ,YAA+B,IAA5BhD,EAA2B,EAA3BA,OAAQrE,EAAmB,EAAnBA,MAAOuE,EAAY,EAAZA,MAC/BwG,EAAQF,EAAMG,aAAahO,IAAIqH,GACnC,QAAc4G,IAAVF,EAAqB,CACD,iBAATA,IACP/K,EACI+K,EAAMG,KAAOH,EAAMI,MACb,yBACA,uBACVJ,EAAK,aAASA,EAAMG,KAAf,gBAA2BH,EAAMK,KAAjC,gBAA6CL,EAAMM,IAAnD,gBAA8DN,EAAMI,QAE7E,IAAIzF,EAAM4F,SAASC,cAAc,OACjC7F,EAAI8F,UAAYjH,EAAQ,IACxB,IAAIkH,EAAYH,SAASC,cAAc,QACvCE,EAAUxK,MAAMjB,MAAQA,EACxByL,EAAUD,UAAY,IAAMT,EAC5BrF,EAAIgG,YAAYD,GAChBX,EAAIY,YAAYhG,SA7Ob,EAmPnBiF,iBAAmB,WACf,GAAI,EAAKH,UAAU1D,QAAS,CACxB,IAAIpB,EAAM4F,SAASC,cAAc,OACjC7F,EAAI8F,UAAY,EAAKvO,MAAM2D,OAC3B,EAAK4J,UAAU1D,QAAQ4E,YAAYhG,KArPvC,EAAKmB,SAAWrF,IAAMmK,YACtB,EAAKnB,UAAYhJ,IAAMmK,YACvB,EAAKxJ,MAAQ,KACb,EAAKkC,OAAS,GACd,EAAKqG,QAAU,GANA,E,gEAUfnL,KAAK4C,MAAQyJ,YAAYrM,KAAKsH,SAASC,SACvCvH,KAAK4K,oBACL5K,KAAKoH,kB,yCAGU4B,GACVhJ,KAAKtC,MAAM6D,WAAcvB,KAAKtC,MAAMgK,YACrCmD,OAAOC,oBAAoB,SAAU9K,KAAKoH,eAEzCkF,IACG,CACItD,EAAUG,gBACVH,EAAUM,gBACVN,EAAUrI,SAEd,CACIX,KAAKtC,MAAMyL,gBACXnJ,KAAKtC,MAAM4L,gBACXtJ,KAAKtC,MAAMiD,WAInBX,KAAK+I,kBAAkBC,GAEtBsD,IACG,CACItD,EAAUrG,QACVqG,EAAU1H,UACV0H,EAAUL,kBACVK,EAAUJ,WACVI,EAAU9K,WACV8K,EAAUH,UACVG,EAAUF,iBAEd,CACI9I,KAAKtC,MAAMiF,QACX3C,KAAKtC,MAAM4D,UACXtB,KAAKtC,MAAMiL,kBACX3I,KAAKtC,MAAMkL,WACX5I,KAAKtC,MAAMQ,WACX8B,KAAKtC,MAAMmL,UACX7I,KAAKtC,MAAMoL,kBAOnBE,EAAUa,OAAS7J,KAAKtC,MAAMmM,MAC9Bb,EAAUhH,KAAOhC,KAAKtC,MAAMsE,IAE5BhC,KAAK4J,mBANL5J,KAAK6H,eACL7H,KAAK4K,uB,+BAoMT,IAAInK,EAAQT,KAAKtC,MAAM4D,UACjBA,EAAUsF,OAAOG,UACjBG,EAAWN,OAAOG,UAExB,OACI,yBAAKwF,IAAKvM,KAAKsH,SAAU5F,MAAO,CAAE8K,SAAU,aACxC,yBACID,IAAKvM,KAAKiL,UACVvJ,MAAO,CACH8K,SAAU,WACVC,OAAQ,EACRhM,QACAiM,QAAS,W,GAzQNzK,IAAMQ,WAiRlB0E,MAGf,IAAMwF,EAAW,SAACC,GAAD,OACbA,GAAwB,kBAATA,IAAsBxC,MAAMyC,QAAQD,IAEjD7B,EAAY,SAAZA,EAAajL,EAAQgN,GACvB,IAAIC,EAASC,OAAOC,OAAO,GAAInN,GAY/B,OAXI6M,EAAS7M,IAAW6M,EAASG,IAC7BE,OAAOE,KAAKJ,GAAQhF,SAAQ,SAACqF,GACrBR,EAASG,EAAOK,KACVA,KAAOrN,EAERiN,EAAOI,GAAOpC,EAAUjL,EAAOqN,GAAML,EAAOK,IAEjDH,OAAOC,OAAOF,EAAdC,OAAA,IAAAA,CAAA,GAAyBG,EAAML,EAAOK,QAI3CJ,I,2HCtVLK,E,uKAEF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjN,UAAS,UAAKH,KAAKtC,MAAMyC,UAAYH,KAAKtC,MAAMyC,UAAY,kBAAnD,mBACNH,KAAKtC,MAAM2P,WAAcrN,KAAKtC,MAAMqD,UAEjCf,KAAKtC,MAAM2P,UACX,8DACArN,KAAKtC,MAAMqD,YAAcf,KAAKtC,MAAM2P,UACpC,iDACA,KALA,gCAFG,YAQJrN,KAAKtC,MAAMqD,UAAqB,OAAT,OARnB,UAUT,yBAAKZ,UAAU,gBACb,yBACEA,UAAS,uCACPH,KAAKtC,MAAMsD,OAAX,kBACehB,KAAKtC,MAAMsD,QACtB,oBAGN,yBAAKb,UAAU,kBAAkBH,KAAKtC,MAAMuD,QAGhD,yBAAKd,UAAU,iBACb,wBAAIA,UAAU,4BAA4BH,KAAKtC,MAAMyD,MACrD,uBAAGhB,UAAU,QAAQH,KAAKtC,MAAM0D,cAGlCpB,KAAKtC,MAAMqD,WACX,kBAAC,IAAD,CACE4B,QAAS3C,KAAKtC,MAAMiF,QACpBmC,OAAQ9E,KAAKtC,MAAMoH,OACnBvE,KAAMP,KAAKtC,MAAM6C,KACjBiB,OAAQxB,KAAKtC,MAAM8D,OAASxB,KAAKtC,MAAM8D,OAAS,W,GApC9BS,IAAMQ,WA2CrB2K,O,gEC/CfE,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,sE,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B","file":"static/js/18.761bdb0f.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Table, Spin, Divider, List, Space } from 'antd';\nimport { PlaidLink } from 'react-plaid-link';\nimport Chart from '../../charts/apex/lightweight'\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Card,\n  CardImg,\n  Button,\n  Col,\n  Row,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    FormGroup,\n    Label,\n    Input,\n    Spinner,\n    Form\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport {\n  ChevronDown,\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from \"react-feather\"\nimport ReactPaginate from \"react-paginate\"\nimport { LoadingOutlined, ShopOutlined, YuqueOutlined, RiseOutlined, HeartOutlined, DollarOutlined,StarOutlined, ExperimentOutlined, FireOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport StatisticsCard from \"../../../components/@vuexy/statisticsCard/StatisticsCard\"\nimport {DollarSign, PenTool, Heart, Activity, Percent} from \"react-feather\"\nimport GoalOverview from \"./Percent\"\nimport ApexAreaCharts from \"../../charts/apex/ApexAreaCharts\"\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\nimport \"../../../assets/scss/pages/data-list.scss\"\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\nimport risk_averse from \"../../../assets/img/elements/risk_averse.png\";\nimport yield_seeker from \"../../../assets/img/elements/shutterstock_1866835708-removebg-preview.png\";\nimport value from \"../../../assets/img/elements/value_seeker.png\";\nimport all_star from \"../../../assets/img/elements/all_star.png\";\n\nclass Crypto extends React.Component{\n\n  state = {\n    allocation:0,\n    mm_bot:false,\n    ss_bot:false,\n    pt_bot:false,\n    rd_bot: false,\n    isStatsLoading: false,\n    modal:false\n  }\n\n\n  strategyBacktest = (e, name) => {\n    let items = this.state;\n    items['isStatsLoading'] = name;\n    this.setState({items});\n    if(this.state.allocation!==0){\n    axios.get(`https://openstreet.io/api/crypto/?token=${this.props.token}&strategy_name=${name}&action=backtest&allocation=${this.state.allocation}`)\n        .then(res=>{\n           this.setState({\n            pf_stats: res.data.stats[0],\n            stats_set: true,\n            isStatsLoading:\"\",\n            areaSeries:[{data:res.data.wealth_graph}]\n             });\n          \n        }).catch(err => {\n          if (err.response) {\n            console.log(err.response)\n            this.setState({ error_state: true, isStatsLoading:\"\", })\n          }\n          });\n\n    }\n  }\n\n\n  strategyLive = (e, name) => {\n    if(this.state.allocation!==0){\n    axios.post(`https://openstreet.io/api/crypto/?token=${this.props.token}`, {\n      strategy_name: name,\n      allocation: this.state.allocation,\n    }).then(res => {\n      console.log(res);\n      this.setState({ update_set: true })\n      })\n    .catch(err => {\n    if (err.response) {\n      console.log(err.response)\n      this.setState({ error_state: true })\n    }\n      })\n    }}\n    \n  strategyDelete = (e, name) => {\n    axios.get(`https://openstreet.io/api/crypto/?token=${this.props.token}&strategy_name=${name}&action=delete`).then(res=>{\n      this.setState({\n        update_set: true,\n          });\n    }).catch(err => {\n      \n        console.log(err.response)\n        this.setState({ error_state: true })\n      });\n    }\n\n    portfolioConnect = (e) => {\n      e.preventDefault();\n      //this.state.portfolio_stats['execute_portfolio'] = this.state.form_value\n      axios.post(`https://openstreet.io/api/crypto/?token=${this.props.token}&action=connect`, {\n          api_key:this.state.api_key,\n          api_secret: this.state.api_secret\n          }).then(res=>{\n            console.log(res.data.message);\n            this.setState(prevState=>({\n              login_state: res.data.message,\n              modal: !prevState.modal,\n                }));\n          }).catch(err => {\n            \n              console.log(err.response)\n              this.setState(prevState=>({ error_state: true, modal: !prevState.modal, }))\n            }) ;\n\n\n      }  \n  \n      toggleModal = () => {\n        this.setState(prevState => ({\n          modal: !prevState.modal,\n          isExecuteLoading: false,\n        }));\n      }\n\n  fetchArticles = (token) => {\n      axios.get(`https://openstreet.io/api/crypto/?token=${token}`).then(res => {\n        this.setState({\n          strategies: res.data\n        });\n        this.setState({\n          mm_bot:false,\n          ss_bot:false,\n          pt_bot:false,\n          rd_bot: false\n        })\n        for (var i = 0; i < this.state.strategies.length; i++) {\n          let strategy = this.state.strategies[i];\n          this.setState({\n            [strategy.strategy_name]: true\n          });\n      }\n        console.log(this.state);\n      }).catch(err => {\n        \n          console.log(err.response)\n          this.setState({ error_state: true })\n        });\n\n        axios.post(`https://openstreet.io/api/crypto/?token=${this.props.token}&action=connect`)\n        .then(res => {\n          this.setState({\n            login_state: res.data.message\n          });\n        })\n        .catch(err => {\n        \n          console.log(err.response)\n          this.setState({ login_state: false })\n        });\n    }\n\n  componentDidUpdate() {\n      if(this.state.update_set){\n      this.fetchArticles(this.props.token);\n      \n      this.setState({\n        update_set: false\n      });\n      }\n    }\n\n  componentDidMount() {\n      this.fetchArticles(this.props.token);\n    }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n    // console.log(this.state)\n  }\n\n  render(){\n    if (!this.props.token) {\n      return <Redirect to=\"/login\" />;\n    }\n    \n    return (\n      <div>\n        <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          API Keys\n        </ModalHeader>\n        \n          <Form onSubmit={this.portfolioConnect}>\n            <ModalBody>\n\n\n            <FormGroup>\n              <Label for='api_key'>API Key</Label>\n              <Input\n                onChange={this.handleChange}\n                type=\"text\"\n                name='api_key'\n                id='api_key'\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='api_secret'>API Secret</Label>\n              <Input\n                onChange={this.handleChange}\n                type=\"text\"\n                name='api_secret'\n                id='api_secret'\n              />\n            </FormGroup>\n\n            </ModalBody>\n\n            <ModalFooter>\n              \n            <FormGroup>\n            \n            <Button color=\"success\" type=\"submit\">\n              Submit\n            </Button>\n            \n            {\" \"}\n            </FormGroup>\n            <FormGroup>\n            <Button outline color=\"primary\" onClick={this.toggleModal}>\n              Cancel\n            </Button>\n            </FormGroup>\n            </ModalFooter>\n            </Form>\n            </Modal>\n\n        {\n          this.state.login_state ? \n          <div/>\n          :\n            <Card>\n              <CardBody>\n                <Button color=\"primary\" onClick={this.toggleModal}>\n                  Connect Crypto Account\n                </Button>\n              </CardBody>\n            </Card>\n          \n          \n\n        }\n       {\n\nthis.state.stats_set  ?\n\n  <div className=\"site-card-wrapper\">\n    <Row gutter={16}>\n    <Col lg=\"5\" sm=\"12\">\n    <Row gutter={20}>\n    \n    <Col lg=\"6\" sm=\"12\">\n      <StatisticsCard\n        hideChart\n        iconBg=\"primary\"\n        icon={<Percent className=\"primary\" size={22} />}\n        stat={this.state.pf_stats[\"Annual return\"]}\n        statTitle=\"Historical Return\"\n      />\n    </Col>\n    <Col lg=\"6\" sm=\"12\">\n      <StatisticsCard\n        hideChart\n        iconBg=\"danger\"\n        icon={<Percent className=\"danger\" size={22} />}\n        stat={this.state.pf_stats[\"Annual volatility\"]}\n        statTitle=\"Historical Risk\"\n      />\n    </Col>\n  \n  <Col lg=\"6\" sm=\"12\">\n    <StatisticsCard\n      hideChart\n      iconBg=\"success\"\n      icon={<Activity className=\"success\" size={22} />}\n      stat={this.state.pf_stats[\"Sharpe ratio\"]}\n      statTitle=\"Sharpe Ratio\"\n    />\n  </Col>\n  <Col lg=\"6\" sm=\"12\">\n    <StatisticsCard\n      hideChart\n      iconBg=\"danger\"\n      icon={<Percent className=\"danger\" size={22} />}\n      stat={this.state.pf_stats[\"Max drawdown\"]}\n      statTitle=\"Max Drawdown\"\n    />\n  </Col>\n  \n    <Col lg=\"6\" sm=\"12\">\n    <StatisticsCard\n      hideChart\n      iconBg=\"success\"\n      icon={<Activity className=\"success\" size={22} />}\n      stat={this.state.pf_stats[\"Sortino ratio\"]}\n      statTitle=\"Sortino Ratio\"\n    />\n    </Col>\n    <Col lg=\"6\" sm=\"12\">\n    <StatisticsCard\n      hideChart\n      iconBg=\"warning\"  \n      icon={<Activity className=\"warning\" size={22} />}\n      stat={this.state.pf_stats['Calmar ratio']}\n      statTitle=\"Calmar Ratio\"\n    />\n  </Col>\n  \n  \n \n  <Col lg=\"6\" sm=\"12\">\n    <StatisticsCard\n      hideChart\n      iconBg=\"success\"\n      icon={<Activity className=\"success\" size={22} />}\n      stat={this.state.pf_stats[\"Alpha\"]}\n      statTitle=\"Alpha\"\n    />\n  </Col>\n  \n  <Col lg=\"6\" sm=\"12\">\n    <StatisticsCard\n      hideChart\n      iconBg=\"warning\"\n      icon={<Heart className=\"warning\" size={22} />}\n      stat={this.state.pf_stats['Beta']}\n      statTitle=\"Beta\"\n    />\n  </Col>\n  \n\n\n  </Row>\n  </Col>\n  \n  <Col lg=\"7\" sm=\"12\">\n    <Col>\n  <Card>\n  <Chart legend=\"Strategy Wealth Graph\" darkTheme={true} areaSeries={this.state.areaSeries} autoWidth height={420} />\n  </Card>\n  </Col>\n  </Col>\n  </Row>\n\n  </div>\n  :\n  <div/>\n            }\n  <Row>\n  \n            <Col sm=\"4\" lg=\"3\" sm=\"12\">\n        <Card >\n             \n             \n               <CardBody>\n             <h3>Agressive Signal Seeker Bot</h3>\n             \n             <span>This Bot is for investors who like to trade in chunks using technical price signals. The Bot analyzes markets using technical indicators and applies a decision tree to predict returns.</span>\n             <div className=\"card-btns d-flex justify-content-between mt-2\">\n             {\n              this.state.login_state===true ?\n              <div>\n               \n               {\n                 this.state.ss_bot ?\n                 <div>\n                  \n                 <Button  onClick={this.resetFilter} color='success'>\n                Sync\n               </Button>\n               <Button style={{\n              margin: '0 5px',\n            }}  onClick={e => this.strategyDelete(e, 'ss_bot')} color='danger'>\n                Exit\n              </Button>\n              </div>\n                 :\n                 <div>\n                   \n                    <Col md=\"12\">\n        <Input\n          //  ref=\"sdf\"\n          required\n          type=\"text\"\n          name=\"allocation\"\n          id=\"allocation\"\n          placeholder=\"Allocation\"\n          onChange={this.handleChange}\n\n        />\n      </Col><p/><Col>\n               <Button.Ripple onClick={e => this.strategyLive(e, 'ss_bot')} color='success'>\n                 Go Live\n               </Button.Ripple>\n               <Button.Ripple outline style={{\n              margin: '0 5px',\n            }} onClick={e => this.strategyBacktest(e, 'ss_bot')} color='primary'>\n               Backtest\n             </Button.Ripple>\n            \n             <Space/>\n            { this.state.isStatsLoading==='ss_bot'  ?\n\n              <Spinner color=\"primary\"/>\n              :\n              <div/>\n            }\n             </Col>\n             </div>\n              }\n              </div>\n              :\n              <div/>\n            }\n             </div>\n             </CardBody>\n           </Card>\n            </Col>\n            <Col sm=\"4\" lg=\"3\" sm=\"12\">\n        <Card >\n             \n            \n               <CardBody>\n             <h3>Passive Market Maker Bot</h3>\n             \n             <span>This Bot is for investors who like to trade infrequently and allocate larger quantity per trade. The Bot limits trades to high confidence signals only.</span>\n             <div className=\"card-btns d-flex justify-content-between mt-2\">\n               \n               <Col>\n               <Button.Ripple outline color='primary'>\n                 Coming Soon!\n               </Button.Ripple>\n                </Col>\n             </div>\n             </CardBody>\n           </Card>\n            </Col>\n            <Col sm=\"4\" lg=\"3\" sm=\"12\">\n        <Card >\n             \n            \n               <CardBody>\n             <h3>Pairs Trader Bot</h3>\n             \n             <span>This Bot is for investors who like to trade in pairs and wait for moments when the assets go in and out of correlation. The Bot limits trades to BTC ETH pair.</span>\n             <div className=\"card-btns d-flex justify-content-between mt-2\">\n               \n               <Col>\n               <Button.Ripple outline color='primary'>\n                 Coming Soon!\n               </Button.Ripple>\n                </Col>\n             </div>\n             </CardBody>\n           </Card>\n            </Col>\n            <Col sm=\"4\" lg=\"3\" sm=\"12\">\n        <Card >\n             \n             \n               <CardBody>\n             <h3>Regime Detector AI Bot</h3>\n             \n             <span>This Bot detects the trading regime and chooses the best strategy given that regime. The Bot analyzes signals across the board.</span>\n             <div className=\"card-btns d-flex justify-content-between mt-2\">\n               \n               <Col>\n               <Button.Ripple outline color='primary'>\n                 Coming Soon!\n               </Button.Ripple>\n                </Col>\n             </div>\n             </CardBody>\n           </Card>\n            </Col>\n            </Row>\n\n\n           \n  </div>\n    )}\n    }\n\nconst mapStatetoProps = state =>{\n  return{\n    token: state.auth.token\n  }\n}\n    \n    export default connect(mapStatetoProps)(Crypto);","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          required={this.props.required}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport Chart from \"react-apexcharts\"\r\n\r\nclass GoalOverview extends React.Component {\r\n  state = {\r\n    options: {\r\n      chart: {\r\n        sparkline: {\r\n          enabled: true\r\n        },\r\n        dropShadow: {\r\n          enabled: true,\r\n          blur: 3,\r\n          left: 1,\r\n          top: 1,\r\n          opacity: 0.1\r\n        }\r\n      },\r\n      colors: [this.props.success],\r\n      plotOptions: {\r\n        radialBar: {\r\n          size: 110,\r\n          startAngle: -140,\r\n          endAngle: 150,\r\n          hollow: {\r\n            size: \"77%\"\r\n          },\r\n          track: {\r\n            background: this.props.strokeColor,\r\n            strokeWidth: \"50%\"\r\n          },\r\n          dataLabels: {\r\n            name: {\r\n              show: false\r\n            },\r\n            value: {\r\n              offsetY: 18,\r\n              color: this.props.strokeColor,\r\n              fontSize: \"4rem\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n          shade: \"dark\",\r\n          type: \"horizontal\",\r\n          shadeIntensity: 0.5,\r\n          gradientToColors: [\"#00b5b5\"],\r\n          inverseColors: true,\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100]\r\n        }\r\n      },\r\n      stroke: {\r\n        lineCap: \"round\"\r\n      }\r\n    },\r\n    series: [this.props.percent]\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>{this.props.title}</CardTitle>\r\n        </CardHeader><hr/>\r\n        <CardBody>\r\n          <Chart\r\n            options={this.state.options}\r\n            series={[this.props.percent]}\r\n            type=\"radialBar\"\r\n            height={200}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default GoalOverview\r\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\n\nclass ApexAreaCharts extends React.Component {\n  modifydata = (data, flag, second) => {\n    let date = [], wealth = [];\n    for (let x in data) {\n      date.push(data[x].date);\n      if (second == 0) wealth.push(Math.round(data[x].portfolio_wealth * 100) / 100);\n      else wealth.push(Math.round(data[x].performance * 100) / 100);\n    }\n    if (!flag) return date;\n    else return wealth;\n  }\n\n  render() {\n    const options = {\n      chart: {\n        id: \"areaChart\"\n      },\n      xaxis: {\n        type: \"date\",\n        categories: this.modifydata(this.props.data, 0, this.props.second),\n        tickAmount: 8\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: this.props.themeColors,\n      grid: {\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"],\n          opacity: 0.5\n        }\n      },\n      legend: {\n        offsetY: -10\n      },\n      tooltip: {\n        x: {\n          format: \"dd/MM/yy\"\n        }\n      }\n    };\n    const series = [\n      {\n        name: \"series1\",\n        data: this.modifydata(this.props.data, 1, this.props.second)\n      }\n    ];\n\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>{this.props.title}</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Chart\n            options={options}\n            series={series}\n            type=\"area\"\n            height={500}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default ApexAreaCharts\n","import React from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport equal from \"fast-deep-equal\";\n\nconst addSeriesFunctions = {\n    candlestick: \"addCandlestickSeries\",\n    line: \"addLineSeries\",\n    area: \"addAreaSeries\",\n    bar: \"addBarSeries\",\n    histogram: \"addHistogramSeries\",\n};\n\nconst colors = [\n    \"#008FFB\",\n    \"#00E396\",\n    \"#FEB019\",\n    \"#FF4560\",\n    \"#775DD0\",\n    \"#F86624\",\n    \"#A5978B\",\n];\n\nconst darkTheme = {\n    layout: {\n        backgroundColor: \"#0e163b\",\n        lineColor: \"#2B2B43\",\n        textColor: \"#D9D9D9\",\n    },\n    grid: {\n        vertLines: {\n            color: \"#363c4e\",\n        },\n        horzLines: {\n            color: \"#363c4e\",\n        },\n    },\n};\n\nconst lightTheme = {\n    layout: {\n        backgroundColor: \"#FFFFFF\",\n        lineColor: \"#2B2B43\",\n        textColor: \"#191919\",\n    },\n    grid: {\n        vertLines: {\n            color: \"#e1ecf2\",\n        },\n        horzLines: {\n            color: \"#e1ecf2\",\n        },\n    },\n};\n\nclass ChartWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartDiv = React.createRef();\n        this.legendDiv = React.createRef();\n        this.chart = null;\n        this.series = [];\n        this.legends = [];\n    }\n\n    componentDidMount() {\n        this.chart = createChart(this.chartDiv.current);\n        this.handleUpdateChart();\n        this.resizeHandler();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!this.props.autoWidth && !this.props.autoHeight)\n            window.removeEventListener(\"resize\", this.resizeHandler);\n        if (\n            !equal(\n                [\n                    prevProps.onCrosshairMove,\n                    prevProps.onTimeRangeMove,\n                    prevProps.onClick,\n                ],\n                [\n                    this.props.onCrosshairMove,\n                    this.props.onTimeRangeMove,\n                    this.props.onClick,\n                ]\n            )\n        )\n            this.unsubscribeEvents(prevProps);\n        if (\n            !equal(\n                [\n                    prevProps.options,\n                    prevProps.darkTheme,\n                    prevProps.candlestickSeries,\n                    prevProps.lineSeries,\n                    prevProps.areaSeries,\n                    prevProps.barSeries,\n                    prevProps.histogramSeries,\n                ],\n                [\n                    this.props.options,\n                    this.props.darkTheme,\n                    this.props.candlestickSeries,\n                    this.props.lineSeries,\n                    this.props.areaSeries,\n                    this.props.barSeries,\n                    this.props.histogramSeries,\n                ]\n            )\n        ) {\n            this.removeSeries();\n            this.handleUpdateChart();\n        } else if (\n            prevProps.from !== this.props.from ||\n            prevProps.to !== this.props.to\n        )\n            this.handleTimeRange();\n    }\n\n    resizeHandler = () => {\n        let width =\n            this.props.autoWidth &&\n            this.chartDiv.current &&\n            this.chartDiv.current.parentNode.clientWidth;\n        let height =\n            this.props.autoHeight && this.chartDiv.current\n                ? this.chartDiv.current.parentNode.clientHeight\n                : this.props.height || 500;\n        this.chart.resize(width, height);\n    };\n\n    removeSeries = () => {\n        this.series.forEach((serie) => this.chart.removeSeries(serie));\n        this.series = [];\n    };\n\n    addSeries = (serie, type) => {\n        const func = addSeriesFunctions[type];\n        let color =\n            (serie.options && serie.options.color) ||\n            colors[this.series.length % colors.length];\n        const series = this.chart[func]({\n            color,\n            ...serie.options,\n        });\n        let data = this.handleLinearInterpolation(\n            serie.data,\n            serie.linearInterpolation\n        );\n        series.setData(data);\n        if (serie.markers) series.setMarkers(serie.markers);\n        if (serie.priceLines)\n            serie.priceLines.forEach((line) => series.createPriceLine(line));\n        if (serie.legend) this.addLegend(series, color, serie.legend);\n        return series;\n    };\n\n    handleSeries = () => {\n        let series = this.series;\n        let props = this.props;\n        props.candlestickSeries &&\n            props.candlestickSeries.forEach((serie) => {\n                series.push(this.addSeries(serie, \"candlestick\"));\n            });\n\n        props.lineSeries &&\n            props.lineSeries.forEach((serie) => {\n                series.push(this.addSeries(serie, \"line\"));\n            });\n\n        props.areaSeries &&\n            props.areaSeries.forEach((serie) => {\n                series.push(this.addSeries(serie, \"area\"));\n            });\n\n        props.barSeries &&\n            props.barSeries.forEach((serie) => {\n                series.push(this.addSeries(serie, \"bar\"));\n            });\n\n        props.histogramSeries &&\n            props.histogramSeries.forEach((serie) => {\n                series.push(this.addSeries(serie, \"histogram\"));\n            });\n    };\n\n    unsubscribeEvents = (prevProps) => {\n        let chart = this.chart;\n        chart.unsubscribeClick(prevProps.onClick);\n        chart.unsubscribeCrosshairMove(prevProps.onCrosshairMove);\n        chart.timeScale().unsubscribeVisibleTimeRangeChange(prevProps.onTimeRangeMove);\n    };\n\n    handleEvents = () => {\n        let chart = this.chart;\n        let props = this.props;\n        props.onClick && chart.subscribeClick(props.onClick);\n        props.onCrosshairMove &&\n            chart.subscribeCrosshairMove(props.onCrosshairMove);\n        props.onTimeRangeMove &&\n            chart.timeScale().subscribeVisibleTimeRangeChange(props.onTimeRangeMove);\n\n        // handle legend dynamical change\n        chart.subscribeCrosshairMove(this.handleLegends);\n    };\n\n    handleTimeRange = () => {\n        let { from, to } = this.props;\n        from && to && this.chart.timeScale().setVisibleRange({ from, to });\n    };\n\n    handleLinearInterpolation = (data, candleTime) => {\n        if (!candleTime || data.length < 2 || !data[0].value) return data;\n        let first = data[0].time;\n        let last = data[data.length - 1].time;\n        let newData = new Array(Math.floor((last - first) / candleTime));\n        newData[0] = data[0];\n        let index = 1;\n        for (let i = 1; i < data.length; i++) {\n            newData[index++] = data[i];\n            let prevTime = data[i - 1].time;\n            let prevValue = data[i - 1].value;\n            let { time, value } = data[i];\n            for (\n                let interTime = prevTime;\n                interTime < time - candleTime;\n                interTime += candleTime\n            ) {\n                // interValue get from the Taylor-Young formula\n                let interValue =\n                    prevValue +\n                    (interTime - prevTime) *\n                        ((value - prevValue) / (time - prevTime));\n                newData[index++] = { time: interTime, value: interValue };\n            }\n        }\n        // return only the valid values\n        return newData.filter((x) => x);\n    };\n\n    handleUpdateChart = () => {\n        window.removeEventListener(\"resize\", this.resizeHandler);\n        let { chart, chartDiv } = this;\n        let props = this.props;\n        let options = this.props.darkTheme ? darkTheme : lightTheme;\n        options = mergeDeep(options, {\n            width: props.autoWidth\n                ? chartDiv.current.parentNode.clientWidth\n                : props.width,\n            height: props.autoHeight\n                ? chartDiv.current.parentNode.clientHeight\n                : props.height || 500,\n            ...props.options,\n        });\n        chart.applyOptions(options);\n        if (this.legendDiv.current) this.legendDiv.current.innerHTML = \"\";\n        this.legends = [];\n        if (this.props.legend) this.handleMainLegend();\n\n        this.handleSeries();\n        this.handleEvents();\n        this.handleTimeRange();\n\n        if (props.autoWidth || props.autoHeight)\n            // resize the chart with the window\n            window.addEventListener(\"resize\", this.resizeHandler);\n    };\n\n    addLegend = (series, color, title) => {\n        this.legends.push({ series, color, title });\n    };\n\n    handleLegends = (param) => {\n        let div = this.legendDiv.current;\n        if (param.time && div && this.legends.length) {\n            div.innerHTML = \"\";\n            this.legends.forEach(({ series, color, title }) => {\n                let price = param.seriesPrices.get(series);\n                if (price !== undefined) {\n                    if (typeof price == \"object\") {\n                        color =\n                            price.open < price.close\n                                ? \"rgba(0, 150, 136, 0.8)\"\n                                : \"rgba(255,82,82, 0.8)\";\n                        price = `O: ${price.open}, H: ${price.high}, L: ${price.low}, C: ${price.close}`;\n                    }\n                    let row = document.createElement(\"div\");\n                    row.innerText = title + \" \";\n                    let priceElem = document.createElement(\"span\");\n                    priceElem.style.color = color;\n                    priceElem.innerText = \" \" + price;\n                    row.appendChild(priceElem);\n                    div.appendChild(row);\n                }\n            });\n        }\n    };\n\n    handleMainLegend = () => {\n        if (this.legendDiv.current) {\n            let row = document.createElement(\"div\");\n            row.innerText = this.props.legend;\n            this.legendDiv.current.appendChild(row);\n        }\n    };\n\n    render() {\n        let color = this.props.darkTheme\n            ? darkTheme.layout.textColor\n            : lightTheme.layout.textColor;\n\n        return (\n            <div ref={this.chartDiv} style={{ position: \"relative\" }}>\n                <div\n                    ref={this.legendDiv}\n                    style={{\n                        position: \"absolute\",\n                        zIndex: 2,\n                        color,\n                        padding: 10,\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ChartWrapper;\nexport * from \"lightweight-charts\";\n\nconst isObject = (item) =>\n    item && typeof item === \"object\" && !Array.isArray(item);\n\nconst mergeDeep = (target, source) => {\n    let output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach((key) => {\n            if (isObject(source[key])) {\n                if (!(key in target))\n                    Object.assign(output, { [key]: source[key] });\n                else output[key] = mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(output, { [key]: source[key] });\n            }\n        });\n    }\n    return output;\n};\n","import React from \"react\"\nimport { Card, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\n\nclass StatisticsCards extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardBody\n          className={`${this.props.className ? this.props.className : \"stats-card-body\"} d-flex ${\n            !this.props.iconRight && !this.props.hideChart\n              ? \"flex-column align-items-start\"\n              : this.props.iconRight\n              ? \"justify-content-between flex-row-reverse align-items-center\"\n              : this.props.hideChart && !this.props.iconRight\n              ? \"justify-content-center flex-column text-center\"\n              : null\n          } ${!this.props.hideChart ? \"pb-0\" : \"pb-2\"} pt-2`}\n        >\n          <div className=\"icon-section\">\n            <div\n              className={`avatar avatar-stats p-50 m-0 ${\n                this.props.iconBg\n                  ? `bg-rgba-${this.props.iconBg}`\n                  : \"bg-rgba-primary\"\n              }`}\n            >\n              <div className=\"avatar-content\">{this.props.icon}</div>\n            </div>\n          </div>\n          <div className=\"title-section\">\n            <h2 className=\"text-bold-600 mt-1 mb-25\">{this.props.stat}</h2>\n            <p className=\"mb-0\">{this.props.statTitle}</p>\n          </div>\n        </CardBody>\n        {!this.props.hideChart && (\n          <Chart\n            options={this.props.options}\n            series={this.props.series}\n            type={this.props.type}\n            height={this.props.height ? this.props.height : 100}\n          />\n        )}\n      </Card>\n    )\n  }\n}\nexport default StatisticsCards\n","module.exports = __webpack_public_path__ + \"static/media/risk_averse.3db5b121.png\";","module.exports = __webpack_public_path__ + \"static/media/shutterstock_1866835708-removebg-preview.e3f5256b.png\";","module.exports = __webpack_public_path__ + \"static/media/value_seeker.5b8ee04b.png\";","module.exports = __webpack_public_path__ + \"static/media/all_star.2ab25ca5.png\";"],"sourceRoot":""}