{"version":3,"sources":["assets/img/pages/register.jpg","views/pages/authentication/register/RegisterJWT.js","views/pages/authentication/register/Register.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["module","exports","RegisterJWT","state","email","password1","password2","username","error_msg","hasError","handleRegister","e","preventDefault","props","onSignup","then","res","type","setState","error","catch","err","console","log","toggleModal","prevState","Modal","isOpen","this","toggle","className","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Form","onSubmit","FormGroup","Input","name","placeholder","required","value","onChange","target","Label","minLength","valid","invalid","icon","size","label","defaultChecked","Ripple","outline","history","push","React","Component","connect","loading","auth","dispatch","a","actions","Register","activeTab","tab","Row","Col","sm","xl","lg","md","Card","src","registerImg","alt","CardHeader","CardTitle","CardBody","CheckBoxesVuexy","checked","disabled"],"mappings":"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","file":"static/js/23.08717546.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/register.23d1bae7.jpg\";","import React from \"react\"\nimport { Form, FormGroup, Input, Label, Modal,\n  Button,\n    ModalHeader,\n    ModalBody,\n    ModalFooter } from \"reactstrap\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Check } from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport { history } from \"../../../../history\"\nimport * as actions from \"../../../../redux/actions/auth/loginActions\"\n\nclass RegisterJWT extends React.Component {\n  state = {\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n    username: \"\",\n    error_msg:\"\",\n    hasError: false\n  }\n\n  handleRegister = e => {\n    e.preventDefault()\n    this.props.onSignup(\n      this.state.username,\n      this.state.email,\n      this.state.password1,\n      this.state.password2\n    ).then(res => {\n      if (res && res.type == 'AUTH_FAIL') {\n        this.setState({ hasError: true, error_msg: res.error });\n      } else {\n        this.setState({ hasError: false, error_msg: '' });\n      }\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      hasError: !prevState.hasError\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n      <Modal\n      isOpen={this.state.hasError}\n      toggle={this.toggleModal}\n      className=\"modal-dialog-centered\"\n    >\n        <ModalHeader toggle={this.toggleModal}>Error</ModalHeader>\n        <ModalBody>\n          \n        {this.state.error_msg}\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={this.toggleModal}>\n            Dismiss\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Form onSubmit={this.handleRegister}>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            required\n            value={this.state.username}\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <Label>Username</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n            value={this.state.email}\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <Label>Email</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password1}\n            minLength={6}\n            onChange={e => this.setState({ password1: e.target.value })}\n          />\n          <Label>Password</Label>\n        </FormGroup>\n        <FormGroup className=\"form-label-group\">\n          <Input\n            type=\"password\"\n            name=\"confirm\"\n            placeholder=\"Confirm Password\"\n            required\n            value={this.state.password2}\n            minLength={6}\n            onChange={e => this.setState({ password2: e.target.value })}\n            valid={this.state.password1 && this.state.password1===this.state.password2}\n            invalid={!(this.state.password1===this.state.password2)}\n          />\n          <Label>Confirm Password</Label>\n        </FormGroup>\n        <FormGroup>\n          <Checkbox\n            color=\"primary\"\n            name=\"agreement\"\n            required={true}\n            icon={<Check className=\"vx-icon\" size={16} />}\n            label=\" I accept the terms & conditions.\"\n            defaultChecked={true}\n          />\n        </FormGroup>\n        <div className=\"d-flex justify-content-between\">\n          <Button.Ripple\n            color=\"primary\"\n            outline\n            onClick={() => {\n              history.push(\"/login\")\n            }}\n          >\n            Login\n          </Button.Ripple>\n          <Button.Ripple color=\"primary\" type=\"submit\">\n            Register\n          </Button.Ripple>\n        </div>\n      </Form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n      loading: state.auth.loading,\n      error: state.auth.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: async (username, email, password1, password2)=> await dispatch(actions.authSignup(username, email, password1, password2))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterJWT)\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport RegisterJWT from \"./RegisterJWT\"\nimport registerImg from \"../../../../assets/img/pages/register.jpg\"\nimport \"../../../../assets/scss/pages/authentication.scss\"\n\nclass Register extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n  toggle = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      })\n    }\n  }\n  render() {\n    return (\n      <Row className=\"m-0 justify-content-center\">\n        <Col\n          sm=\"8\"\n          xl=\"7\"\n          lg=\"10\"\n          md=\"8\"\n          className=\"d-flex justify-content-center\"\n        >\n          <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\n            <Row className=\"m-0\">\n              <Col\n                lg=\"6\"\n                className=\"d-lg-block d-none text-center align-self-center px-1 py-0\"\n              >\n                <img className=\"mr-1\" src={registerImg} alt=\"registerImg\" />\n              </Col>\n              <Col lg=\"6\" md=\"12\" className=\"p-0\">\n                <Card className=\"rounded-0 mb-0 p-2\">\n                  <CardHeader className=\"pb-1 pt-50\">\n                    <CardTitle>\n                      <h4 className=\"mb-0\">Create Account</h4>\n                    </CardTitle>\n                  </CardHeader>\n                  <p className=\"px-2 auth-title mb-0\">\n                    Fill the below form to create a new account.\n                  </p>\n                  \n                  <CardBody className=\"pt-1 pb-50\">\n                    <RegisterJWT />\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default Register\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          required={this.props.required}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n"],"sourceRoot":""}